# This is a basic workflow to help you get started with Actions

name: terraform

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "test-git" ]
  pull_request:
    branches: [ "test-git" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
      ROOT_PATH: '${{github.workspace}}/terraform'
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: terraform init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}
    - name: terraform Plan
      run: terraform plan 
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform apply
      if: github.ref == 'ref/heads/main' && github.event_name == 'push'
      run: terraform apply --auto-approve 
      working-directory: ${{ env.ROOT_PATH }}

